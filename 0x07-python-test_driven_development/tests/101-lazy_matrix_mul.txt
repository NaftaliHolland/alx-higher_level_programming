>>> lazy_matrix_mul = __import__("101-lazy_matrix_mul").lazy_matrix_mul

>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[ 7 10]
 [15 22]]

>>> print(lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13 16]]

>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], []]))
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> print(lazy_matrix_mul([[], [3, 4]], [[1, 2], [3, 4]]))
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> print(lazy_matrix_mul("Hello", [[1, 2], [3, 4]]))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> print(lazy_matrix_mul([[1, 2], [3, 4]], "Hello"))
Traceback (most recent call last):
TypeError: m_b must be a list

>>> print(lazy_matrix_mul([[1, 2], "Hello"], [[1, 2], [3, 4]]))
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], "Hello"]))
Traceback (most recent call last):
TypeError: m_b must be a list of lists

>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [2, 4, 5]]))
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> print(lazy_matrix_mul([[1, 2], [3, 4, 4]], [[1, 2], [2, 4]]))
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> print(lazy_matrix_mul([[1, 2, 4], [3, 4, 3], [3, 5, 2]], [[1, 2], [2, 4]]))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied
